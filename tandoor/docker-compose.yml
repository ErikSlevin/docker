version: "3"
services:

  db_recipes:
    restart: always
    image: postgres:11-alpine
    
    container_name: tandoor_db
    hostname: tandoor_db
    
    volumes:
      - postgresql:/var/lib/postgresql/data
      
    environment:
      - TLD=$TLD
      - DEBUG=0
      - SQL_DEBUG=0
      - ALLOWED_HOSTS=*
      - SECRET_KEY=$SECRET_KEY
      - TIMEZONE=$TZ
      - DB_ENGINE=django.db.backends.postgresql
      - POSTGRES_HOST=db_recipes
      - POSTGRES_PORT=5432
      - POSTGRES_USER=djangouser
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=djangodb
      - FRACTION_PREF_DEFAULT=0
      - COMMENT_PREF_DEFAULT=1
      - SHOPPING_MIN_AUTOSYNC_INTERVAL=5
      - GUNICORN_MEDIA=0
      - REVERSE_PROXY_AUTH=0
      
    labels:      
      # Watchtower - Container automatisch aktualisieren
      - "com.centurylinklabs.watchtower.enable=true"
      
    networks:
      - default

  web_recipes:
    restart: always
    image: vabene1111/recipes:latest-raspi
    
    container_name: tandoor_app
    hostname: tandoor_app

    environment:
      - TLD=$TLD
      - DEBUG=0
      - SQL_DEBUG=0
      - ALLOWED_HOSTS=*
      - SECRET_KEY=$SECRET_KEY
      - TIMEZONE=$TZ
      - DB_ENGINE=django.db.backends.postgresql
      - POSTGRES_HOST=db_recipes
      - POSTGRES_PORT=5432
      - POSTGRES_USER=djangouser
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=djangodb
      - FRACTION_PREF_DEFAULT=0
      - COMMENT_PREF_DEFAULT=1
      - SHOPPING_MIN_AUTOSYNC_INTERVAL=5
      - GUNICORN_MEDIA=0
      - REVERSE_PROXY_AUTH=0
      
    volumes:
      - staticfiles:/opt/recipes/staticfiles
      - nginx_config:/opt/recipes/nginx/conf.d
      - mediafiles:/opt/recipes/mediafiles
      
    labels:      
      # Watchtower - Container automatisch aktualisieren
      - "com.centurylinklabs.watchtower.enable=true"
      
    depends_on:
      - db_recipes
      
    networks:
      - default

  nginx_recipes:
    image: nginx:mainline-alpine
    restart: always

    container_name: tandoor_nginx
    hostname: tandoor_nginx

    environment:
      - TLD=$TLD
      - DEBUG=0
      - SQL_DEBUG=0
      - ALLOWED_HOSTS=*
      - SECRET_KEY=$SECRET_KEY
      - TIMEZONE=$TZ
      - DB_ENGINE=django.db.backends.postgresql
      - POSTGRES_HOST=db_recipes
      - POSTGRES_PORT=5432
      - POSTGRES_USER=djangouser
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=djangodb
      - FRACTION_PREF_DEFAULT=0
      - COMMENT_PREF_DEFAULT=1
      - SHOPPING_MIN_AUTOSYNC_INTERVAL=5
      - GUNICORN_MEDIA=0
      - REVERSE_PROXY_AUTH=0

    volumes:
      - nginx_config:/etc/nginx/conf.d:ro
      - staticfiles:/static:ro
      - mediafiles:/media:ro
      
    labels:
      - "traefik.http.routers.tandoor.rule=Host(`tandoor.$TLD`)"                     # HTTP Domain ändern
      - "traefik.http.routers.tandoor-secure.rule=Host(`tandoor.$TLD`)"              # HTTPS Domain ändern
      - "traefik.enable=true"
      - "traefik.http.routers.tandoor.entrypoints=http"
      - "traefik.http.middlewares.tandoor-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.tandoor.middlewares=tandoor-https-redirect"
      - "traefik.http.routers.tandoor-secure.entrypoints=https"
      - "traefik.http.routers.tandoor-secure.tls=true"
      - "traefik.http.routers.tandoor-secure.tls.certresolver=http"
      - "traefik.http.routers.tandoor-secure.service=tandoor"
      - "traefik.http.services.tandoor.loadbalancer.server.port=80"
      - "traefik.docker.network=proxy"
    
      # Watchtower - Container automatisch aktualisieren
      - "com.centurylinklabs.watchtower.enable=true"
      
    depends_on:
      - web_recipes
      
    networks:
      - default
      - proxy

networks:
  default:
  proxy:
    external: true

volumes:
  nginx_config:
    name: tandoor_app_config
  staticfiles:
    name: tandoor_app_files
  postgresql:
    name: tandoor_db
  mediafiles:
    name: tandoor_app_media